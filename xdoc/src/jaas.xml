<?xml version="1.0" encoding="UTF-8"?>
<chapter id="jaas">
<title>JAAS LoginModule</title>

<section>
	<title>Introduction</title>
	<para>
Hedwig provides pluggable security through JAAS login module.
Using this mechanism, you can use legacy database or LDAP directory to verify if the given password is correct for the user. 
For general information on JAAS see the <ulink url="http://java.sun.com/j2se/1.4.2/docs/guide/security/jaas/tutorials/GeneralAcnOnly.html">JAAS Authentication Tutorial</ulink> and the <ulink url="http://java.sun.com/j2se/1.4.2/docs/guide/security/jaas/JAASRefGuide.html">reference guide</ulink>.
	</para>
</section>

<section>
	<title>Configuring the JAAS LoginModule</title>
	<para>
JAAS configures itself using a configuration provider.
The default JAAS configuration provider locates its configuration file by looking at - among other things - the <emphasis>java.security.auth.login.config</emphasis> system property.
In Hedwig this property locates the <emphasis>conf/login.config</emphasis> file.
The <emphasis>login.config</emphasis> file lists one or more login module configurations.
In order to use JAAS login module you must set <emphasis>auth_scheme</emphasis> parameter from <emphasis>default.properties</emphasis> file to the one of login module configurations in the <emphasis>login.config</emphasis> file.
	</para>
	<para>
Take a look at the following configuration for example: <emphasis>default.properties</emphasis>
<screen><![CDATA[
auth_scheme=PropertiesLogin
]]></screen>
	</para>
	<para>
and <emphasis>login.config</emphasis>	
<screen><![CDATA[
PropertiesLogin {
	com.hs.mail.security.login.PropertiesLoginModule required
		file="users.properties"
		;
};
]]></screen>
	</para>
</section>

<section>
	<title>SQL Authentication</title>
	<para>
Legacy database can be used to verify password.
The <emphasis>query</emphasis> setting contains the SQL query to look up the password.
If the passwords are in plaintext format, you can omit the <emphasis>encoder</emphasis> option.
Otherwise you must specify which password encoder to use. 
See the <xref linkend="passwd.scheme"/> for more information about password encoder.
<screen><![CDATA[
JdbcLogin {
	com.hs.mail.security.login.JdbcLoginModule required
		debug=true
		driver="oracle.jdbc.driver.OracleDriver"
		url="jdbc:oracle:thin:localhost:1521:xe"
		username="legacy"
		password="s3cret"
		query="SELECT passwd FROM user WHERE mail = ?"
		encoder=com.hs.mail.security.login.MD5PasswordEncoder
		;
};
]]></screen>
	</para>
</section>

<section>
	<title>LDAP Authentication</title>
	<para>
LDAP directory can be used to verify password.	
<screen><![CDATA[
LdapLogin {
	com.hs.mail.security.login.JndiLoginModule required
		context.factory=com.sun.jndi.ldap.LdapCtxFactory
		url="ldap://ldap.domain.com:389"
		username="cn=admin,ou=User,dc=domain,dc=com"
		password=password
		authentication=simple
		base="ou=User,dc=domain,dc=com" 
		searchFilter="(mail={0})"
		subtree=true 
		;
};
]]></screen>
	</para>
</section>

<section id="passwd.scheme">
	<title>Password Schemes</title>
	<para>
Password scheme means the format in which the password is stored in database.
Followings are password schemes supported by Hedwig and class name of password encoder which implements its encryption algorithm.
		<variablelist>
    		<varlistentry>
    			<term><emphasis>PLAIN</emphasis>: Password is in plaintext. This is the default password scheme.</term>
    			<listitem>
	        		<para>com.hs.mail.security.login.PlaintextPasswordEncoder</para>
        		</listitem>
        	</varlistentry>
    		<varlistentry>
    			<term><emphasis>CRYPT</emphasis>: Traditional DES-crypted password in /etc/passwd. (e.g. "password" = -1d2n7Q0.r54s)</term>
    			<listitem>
	        		<para>com.hs.mail.security.login.CryptPasswordEncoder</para>
        		</listitem>
        	</varlistentry>
    		<varlistentry>
    			<term><emphasis>MD5</emphasis>: MD5 based salted password hash nowadays commonly used in /etc/shadow. (e.g. "password" = $1$-1509075$tgA5M34nElt1GjRYRGT36.)</term>
    			<listitem>
	        		<para>com.hs.mail.security.login.MD5PasswordEncoder</para>
        		</listitem>
        	</varlistentry>
        </variablelist>
	</para>
</section>

</chapter>
